{"ast":null,"code":"var _jsxFileName = \"/Users/drake/Downloads/Phase-2-Hooks-Code-Challenge-Bot-Battlr-100421/code-challenge/src/components/YourBotArmy.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport BotCard from \"./BotCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction botReducer(state, action) {\n  switch (action.type) {\n    case \"ADD_TO_ARMY\":\n      return [...state, action.bot];\n    case \"REMOVE_FROM_ARMY\":\n      return state.filter(bot => bot.id !== action.botId);\n    default:\n      return state;\n  }\n}\nconst botTypeClasses = {\n  Assault: \"icon military\",\n  Defender: \"icon shield\",\n  Support: \"icon plus circle\",\n  Medic: \"icon ambulance\",\n  Witch: \"icon magic\",\n  Captain: \"icon star\"\n};\nfunction YourBotArmy() {\n  _s();\n  const [selectedBots, dispatch] = useReducer(botReducer, []);\n  const addToBotArmy = bot => {\n    dispatch({\n      type: \"ADD_TO_ARMY\",\n      bot\n    });\n  };\n  const removeFromBotArmy = botId => {\n    dispatch({\n      type: \"REMOVE_FROM_ARMY\",\n      botId\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment inverted olive bot-army\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui five column grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row bot-army-row\",\n        children: \"Your Bot Army\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row bot-army-row\",\n        children: selectedBots.map(bot => /*#__PURE__*/_jsxDEV(BotCard, {\n          bot: bot,\n          onDelete: () => removeFromBotArmy(bot.id),\n          onAddToArmy: () => addToBotArmy(bot)\n        }, bot.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(YourBotArmy, \"O+JmlwHaBawJjT2SzdqNf/T/i6A=\");\n_c = YourBotArmy;\nexport default YourBotArmy;\nvar _c;\n$RefreshReg$(_c, \"YourBotArmy\");","map":{"version":3,"names":["React","useReducer","BotCard","jsxDEV","_jsxDEV","botReducer","state","action","type","bot","filter","id","botId","botTypeClasses","Assault","Defender","Support","Medic","Witch","Captain","YourBotArmy","_s","selectedBots","dispatch","addToBotArmy","removeFromBotArmy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onDelete","onAddToArmy","_c","$RefreshReg$"],"sources":["/Users/drake/Downloads/Phase-2-Hooks-Code-Challenge-Bot-Battlr-100421/code-challenge/src/components/YourBotArmy.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport BotCard from \"./BotCard\";\n\nfunction botReducer(state, action) {\n  switch (action.type) {\n    case \"ADD_TO_ARMY\":\n      return [...state, action.bot];\n    case \"REMOVE_FROM_ARMY\":\n      return state.filter(bot => bot.id !== action.botId);\n    default:\n      return state;\n  }\n}\n\nconst botTypeClasses = {\n  Assault: \"icon military\",\n  Defender: \"icon shield\",\n  Support: \"icon plus circle\",\n  Medic: \"icon ambulance\",\n  Witch: \"icon magic\",\n  Captain: \"icon star\",\n};\n\nfunction YourBotArmy() {\n  const [selectedBots, dispatch] = useReducer(botReducer, []);\n\n  const addToBotArmy = bot => {\n    dispatch({ type: \"ADD_TO_ARMY\", bot });\n  };\n\n  const removeFromBotArmy = botId => {\n    dispatch({ type: \"REMOVE_FROM_ARMY\", botId });\n  };\n\n  return (\n    <div className=\"ui segment inverted olive bot-army\">\n      <div className=\"ui five column grid\">\n        <div className=\"row bot-army-row\">Your Bot Army</div>\n        <div className=\"row bot-army-row\">\n          {selectedBots.map(bot => (\n            <BotCard\n              key={bot.id}\n              bot={bot}\n              onDelete={() => removeFromBotArmy(bot.id)}\n              onAddToArmy={() => addToBotArmy(bot)}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default YourBotArmy;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,UAAUA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACjC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAChB,OAAO,CAAC,GAAGF,KAAK,EAAEC,MAAM,CAACE,GAAG,CAAC;IAC/B,KAAK,kBAAkB;MACrB,OAAOH,KAAK,CAACI,MAAM,CAACD,GAAG,IAAIA,GAAG,CAACE,EAAE,KAAKJ,MAAM,CAACK,KAAK,CAAC;IACrD;MACE,OAAON,KAAK;EAChB;AACF;AAEA,MAAMO,cAAc,GAAG;EACrBC,OAAO,EAAE,eAAe;EACxBC,QAAQ,EAAE,aAAa;EACvBC,OAAO,EAAE,kBAAkB;EAC3BC,KAAK,EAAE,gBAAgB;EACvBC,KAAK,EAAE,YAAY;EACnBC,OAAO,EAAE;AACX,CAAC;AAED,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,QAAQ,CAAC,GAAGtB,UAAU,CAACI,UAAU,EAAE,EAAE,CAAC;EAE3D,MAAMmB,YAAY,GAAGf,GAAG,IAAI;IAC1Bc,QAAQ,CAAC;MAAEf,IAAI,EAAE,aAAa;MAAEC;IAAI,CAAC,CAAC;EACxC,CAAC;EAED,MAAMgB,iBAAiB,GAAGb,KAAK,IAAI;IACjCW,QAAQ,CAAC;MAAEf,IAAI,EAAE,kBAAkB;MAAEI;IAAM,CAAC,CAAC;EAC/C,CAAC;EAED,oBACER,OAAA;IAAKsB,SAAS,EAAC,oCAAoC;IAAAC,QAAA,eACjDvB,OAAA;MAAKsB,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClCvB,OAAA;QAAKsB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrD3B,OAAA;QAAKsB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAC9BL,YAAY,CAACU,GAAG,CAACvB,GAAG,iBACnBL,OAAA,CAACF,OAAO;UAENO,GAAG,EAAEA,GAAI;UACTwB,QAAQ,EAAEA,CAAA,KAAMR,iBAAiB,CAAChB,GAAG,CAACE,EAAE,CAAE;UAC1CuB,WAAW,EAAEA,CAAA,KAAMV,YAAY,CAACf,GAAG;QAAE,GAHhCA,GAAG,CAACE,EAAE;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIZ,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACV,EAAA,CA5BQD,WAAW;AAAAe,EAAA,GAAXf,WAAW;AA8BpB,eAAeA,WAAW;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}